apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    defaultConfig {
        applicationId "com.example.slandroidexamples"
        minSdkVersion 26
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"
        multiDexEnabled true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation project(":mylib")
    implementation project(":plainlib")
    implementation "io.sealights.on-premise.agents.android:android-manifest-lib:1.0"
    implementation "io.sealights.on-premise.agents.android:android-agent-footprints:1.0"
    implementation "org.jetbrains.kotlin:kotlin-stdlib:1.3.72"
    implementation 'androidx.core:core-ktx:1.1.0'
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'androidx.annotation:annotation:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.1.0'
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.robolectric:robolectric:4.3'
    testImplementation group: 'com.google.truth', name: 'truth', version: '1.0.1'
    testImplementation 'androidx.test.ext:junit:1.1.1'
    testImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    androidTestImplementation 'androidx.test:rules:1.1.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    androidTestImplementation group: 'com.google.truth', name: 'truth', version: '1.0.1'
}

allprojects {
    def included = []
    def excluded = []

    if (!included.isEmpty()) {
        println("[SeaLights Integration] Including only projects: ${included}")
    }

    if (!excluded.isEmpty()) {
        println("[SeaLights Integration] Excluding projects: ${excluded}")
    }

    if (!excluded.contains(name) &&
            (included.isEmpty() || included.contains(name))) {
        println("[SeaLights Integration] SeaLights applied to project: '${name}'")

        apply {
            plugin(io.sealights.onpremise.agents.plugin.SealightsPlugin)
        }

        sealights {

            token="eyJhbGciOiJSUzUxMiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJodHRwczovL0RFVi1rYW1pbC5hdXRoLnNlYWxpZ2h0cy5pby8iLCJqd3RpZCI6IkRFVi1rYW1pbCxpLTA4OWJlODEyMzdjMjQwMDdiLEFQSUdXLWE4ODlhYTYzLTExZDUtNGM4MS05ZjA4LTQ2NzU2YWYyOWNiNywxNjA1Njg2NTcxNzM5Iiwic3ViamVjdCI6IlNlYUxpZ2h0c0BhZ2VudCIsImF1ZGllbmNlIjpbImFnZW50cyJdLCJ4LXNsLXJvbGUiOiJhZ2VudCIsIngtc2wtc2VydmVyIjoiaHR0cHM6Ly9kZXYta2FtaWwtZ3cuZGV2LnNlYWxpZ2h0cy5jby9hcGkiLCJzbF9pbXBlcl9zdWJqZWN0IjoiIiwiaWF0IjoxNjA1Njg2NTcxfQ.Bt9Et0diPlr293y3a98r8lW56OcPWr-LqHFVOpVgZmabHLzcwTSAdz7weilZFSxIF9bx4HhhnFy5FS1Bk0_cEew9hktzwDEANMyIG3nSnxjR0Ds8BOCJ-B0tS-ZgDJohzQAFQtLZU8cLRi6vANBaQ1hD6ts215B6SyWk4GckvSa6hL7eZsF16Ypc-2HOOQP0gZNqXpDOszhmN3TXJzOO32JhtysqBGHywiVPyr1QPaMBMcf44XWl7fsKnmF9D-BxacyaLs1UW6ay74Io5N_CA1bV0mXnv3po4dOIL-Z5jJRiFAghvD0m36ObCKFIduAiO6zyWCF57-wPp3M4zjES1Zjy5ov-g0ML-YHIBPCPrL-8t0ky3MAUSUZi_21jKb78jViDd9TBT1YL4wLmtN8Hftdi4e0QEsisHkDUt9BIQ8FloKhne8FFQz_qq_0pqu1s7etmx5XV_t-7QOyaEE9acg83oWqJYFYVAxUoyuVwa6Fju-Tac55JHEQ5ga4pDHjckqNjBQO7O_TlF4ehA9a5ujYu-9ce5gY772PdFUC9e9VpyCq9npHhVdS5zylcPgAUc6-luyu69VhN5J2LSWK6mtVny6IyJk8ze2ehNV25Z4nN53lypDc1PN9F05WEH7HUbJ7tmsqVqrORoW4HIrz4NRYLKZ7wSRD9OuN1iXT4WTk"
            appName="SL.Android.Examples"
            filesIncluded="*.class"
            filesExcluded="*test-classes*"
            packagesIncluded="*com.example.*"
            packagesExcluded=""
            recursive=true
            includeResources=true
            runTestOnly=false
            logEnabled=true
            logPluginMinimal=false
            logToConsole=true
            logLevel="debug"
            logFolder="/tmp"
            createBuildSessionId=true
            build="SL_Timestamp"
            branch="master"

        }
    }
}
